def DFS(g, v, goal, explored, path_so_far):
    """ Returns path from v to goal in g as a string (Hack) """
    explored.add(v)
    if v == goal:
        return path_so_far + v
    for w in g[v]:
        if w not in explored:
            p = DFS(g, w, goal, explored, path_so_far + v)
            if p:
                return p
    return ""


    for all children {
        if child is unvisited
            {           pathToGoal = DFS( ... , pathSoFar + v);
        if pathToGoal is not None
            {              return PathToGoal; } }

            }     return None